# This is a template. Referenced variables (e.g. $RAILS_ROOT) need
# to be rewritten with real values in order for this file to work.
# To learn about all the directives used here, and more, see
# http://nginx.org/en/docs/dirindex.html

# define our application server
upstream rails {
  server app:3000;
}

upstream events {
  server recommender:7070;
}

upstream queries {
  server recommender:8000;
}

server {
  listen 80 default;
  server_name  <%= domain.name %>;


  # This helper sets up the path for the ACME server to verify that you own the site
  # Defaults to /.well-known/acme-challenge/
  <%= acme_challenge_location %>

  proxy_connect_timeout 300;
  proxy_read_timeout    300;
  proxy_send_timeout    300;

  client_max_body_size 4G;
  keepalive_timeout 5;

  # define where Nginx should write its logs
  access_log /organicity-discovery-api/log/nginx.access.log;
  error_log /organicity-discovery-api/log/nginx.error.log;

  # https://serverfault.com/questions/379675/nginx-reverse-proxy-url-rewrite
  # Redirect discovery.organicity.eu/v0/recommender/events  to port 7070
  location /v0/recommender/events {
    rewrite /v0/recommender/events(.*) /$1 break;
    proxy_pass         http://events;
    proxy_redirect     off;
    proxy_set_header   Host $host;
  }

  # Redirect discovery.organicity.eu/v0/recommender/queries to port 8000
  location /v0/recommender/queries {
    rewrite /v0/recommender/queries(.*) /$1 break;
    proxy_pass         http://queries;
    proxy_redirect     off;
    proxy_set_header   Host $host;
  }

  # deny requests for files that should never be accessed
  location ~ /\. {
    deny all;
  }

  location ~* ^.+\.(rb|log)$ {
    deny all;
  }

  # serve static (compiled) assets directly if they exist (for rails production)
  location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/ {
    try_files $uri @app;

    access_log off;
    gzip_static on; # to serve pre-gzipped version

    expires max;
    add_header Cache-Control public;

    # Some browsers still send conditional-GET requests if there's a
    # Last-Modified header or an ETag header even if they haven't
    # reached the expiry date sent in the Expires header.
    add_header Last-Modified "";
    add_header ETag "";
    break;
  }

  # send non-static file requests to the app server and allow CORS wide open
  location / {
    try_files $uri @app;
  }

  location @app {
    proxy_set_header  X-Real-IP  $remote_addr;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://rails;

    if ($request_method = 'OPTIONS') {
       add_header 'Access-Control-Allow-Origin' '*';
       add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
       add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Accept,Authorization';
       add_header 'Access-Control-Max-Age' 1728000;
       add_header 'Content-Type' 'text/plain charset=UTF-8';
       add_header 'Content-Length' 0;
       return 204;
    }
    if ($request_method = 'POST') {
       add_header 'Access-Control-Allow-Origin' '*';
       add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
       add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
    }
    if ($request_method = 'GET') {
       add_header 'Access-Control-Allow-Origin' '*';
       add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
       add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
    }
  }    
}

server {
  listen 443 ssl http2;
  server_name  <%= domain.name %>;

  ssl on;
  ssl_certificate <%= domain.chained_cert_path %>;
  ssl_certificate_key <%= domain.key_path %>;

  ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
  ssl_session_cache shared:SSL:50m;
  ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA;
  ssl_prefer_server_ciphers on;

  ssl_dhparam <%= dhparam_path %>;

  proxy_connect_timeout 300;
  proxy_read_timeout    300;
  proxy_send_timeout    300;

  client_max_body_size 4G;
  keepalive_timeout 5;

  # define where Nginx should write its logs
  access_log /organicity-discovery-api/log/nginx.access.log;
  error_log /organicity-discovery-api/log/nginx.error.log;

  # https://serverfault.com/questions/379675/nginx-reverse-proxy-url-rewrite
  # Redirect discovery.organicity.eu/v0/recommender/events  to port 7070
  location /v0/recommender/events {
    rewrite /v0/recommender/events(.*) /$1 break;
    proxy_pass         http://events;
    proxy_redirect     off;
    proxy_set_header   Host $host;
  }

  # Redirect discovery.organicity.eu/v0/recommender/queries to port 8000
  location /v0/recommender/queries {
    rewrite /v0/recommender/queries(.*) /$1 break;
    proxy_pass         http://queries;
    proxy_redirect     off;
    proxy_set_header   Host $host;
  }


  # deny requests for files that should never be accessed
  location ~ /\. {
    deny all;
  }

  location ~* ^.+\.(rb|log)$ {
    deny all;
  }

  # serve static (compiled) assets directly if they exist (for rails production)
  location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/ {
    try_files $uri @app;

    access_log off;
    gzip_static on; # to serve pre-gzipped version

    expires max;
    add_header Cache-Control public;

    # Some browsers still send conditional-GET requests if there's a
    # Last-Modified header or an ETag header even if they haven't
    # reached the expiry date sent in the Expires header.
    add_header Last-Modified "";
    add_header ETag "";
    break;
  }

  # send non-static file requests to the app server and allow CORS wide open
  location / {
    try_files $uri @app;
  }

  location @app {
    proxy_set_header  X-Real-IP  $remote_addr;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://rails;

    if ($request_method = 'OPTIONS') {
       add_header 'Access-Control-Allow-Origin' '*';
       add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
       add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Accept,Authorization';
       add_header 'Access-Control-Max-Age' 1728000;
       add_header 'Content-Type' 'text/plain charset=UTF-8';
       add_header 'Content-Length' 0;
       return 204;
    }
    if ($request_method = 'POST') {
       add_header 'Access-Control-Allow-Origin' '*';
       add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
       add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
    }
    if ($request_method = 'GET') {
       add_header 'Access-Control-Allow-Origin' '*';
       add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
       add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
    }
  }
}
