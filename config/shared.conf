# Common config for both 80 and 443

proxy_connect_timeout 300;
proxy_read_timeout    300;
proxy_send_timeout    300;

client_max_body_size 4G;
keepalive_timeout 5;

# define where Nginx should write its logs
access_log /var/log/nginx.access.log;
error_log /var/log/nginx.error.log;

# https://serverfault.com/questions/379675/nginx-reverse-proxy-url-rewrite
# Redirect discovery.organicity.eu/v0/recommender/events  to port 7070
location /v0/recommender/events/ {

  include /etc/nginx/cors.conf;

  rewrite /v0/recommender/events/(.*) /$1 break;

  proxy_set_header  X-Real-IP  $remote_addr;
  proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header   Host $host;
  proxy_redirect off;
  proxy_pass         http://events;

}

# Redirect discovery.organicity.eu/v0/recommender/queries to port 8000
location /v0/recommender/queries/ {

  include /etc/nginx/cors.conf;

  rewrite /v0/recommender/queries/(.*) /$1 break;

  proxy_set_header  X-Real-IP  $remote_addr;
  proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header   Host $host;
  proxy_redirect off;
  proxy_pass         http://queries;
}



# deny requests for files that should never be accessed
location ~ /\. {
  deny all;
}

location ~* ^.+\.(rb|log)$ {
  deny all;
}

# serve static (compiled) assets directly if they exist (for rails production)
location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/ {
  try_files $uri @app;

  access_log off;
  # to serve pre-gzipped version
  gzip_static on;

  expires max;
  add_header Cache-Control public;

  # Some browsers still send conditional-GET requests if there's a
  # Last-Modified header or an ETag header even if they haven't
  # reached the expiry date sent in the Expires header.
  add_header Last-Modified "";
  add_header ETag "";
  break;
}

# send non-static file requests to the app server and allow CORS wide open
location / {
  try_files $uri @app;
}

location /robots.txt {
    return 200 "User-agent: *\nDisallow: /";
}

# tmp fix to not pollute our production.log
location /favicon.ico {
    return 200 "User-agent: *\nDisallow: /";
}

location @app {
  proxy_set_header  X-Real-IP  $remote_addr;
  proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header Host $http_host;
  proxy_redirect off;
  proxy_pass http://rails;

  include /etc/nginx/cors.conf;
}

